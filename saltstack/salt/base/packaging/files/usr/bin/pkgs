#!/usr/bin/env bash
set -eu
set -o pipefail

main() {
	local usr pkgbuilds chroot pacconf repodir
	usr="pkgs"
	pkgbuilds="/home/${usr}/.pkgbuilds"
	chroot="/home/${usr}/.build-chroot/x86_64"
	pacconf="/home/${usr}/.pacman.conf"
	repodir="/home/${usr}"
	repo_pacconf="/etc/pacman.d/repos"

	local repos="" pkgs="" skip=""
	local tasks=() vars=()

	tasks+=(update)

	vars+=(CHROOT="${chroot}")
	vars+=(PACCONF="${pacconf}")
	vars+=(REPODIR="${repodir}")
	vars+=(REPO_PACCONF="${repo_pacconf}")

	while getopts :p:r:s:cv opt
	do
		case "${opt}" in
			p)
				if [[ -z "${pkgs}" ]]
				then
					pkgs="PKGS=${OPTARG}"
				else
					pkgs+=",${OPTARG}"
				fi
				;;
			r)
				if [[ -z "${repos}" ]]
				then
					repos="REPOS=${OPTARG}"
				else
					repos+=",${OPTARG}"
				fi
				;;
			s)
				if [[ -z "${skip}" ]]
				then
					skip="SKIP=${OPTARG}"
				else
					skip+=",${OPTARG}"
				fi
				;;
			c)
				tasks+=(clean)
				;;
			v)
				set -x
				;;
			'?')
				print_error "invalid option -- '${OPTARG}'"
				return 1
				;;
			:)
				print_error "option requires an argument -- '${OPTARG}'"
				return 1
				;;
		esac
	done
	shift "$((OPTIND - 1))"

	[[ -n "${pkgs}" ]]  && vars+=("${pkgs}")
	[[ -n "${repos}" ]] && vars+=("${repos}")
	[[ -n "${skip}" ]] && vars+=("${skip}")

	tasks+=(build)

	sudo -H -u pkgs make -C "${pkgbuilds}" "${tasks[@]}" "${vars[@]}"
}

main "$@"
